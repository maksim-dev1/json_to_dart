name: Deploy Flutter Web to Raspberry Pi

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
      
      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      
      - name: üì¶ Get dependencies
        run: flutter pub get
      
      - name: üîç Analyze code
        run: flutter analyze
        continue-on-error: true
      
      - name: üèóÔ∏è Build Flutter Web
        run: flutter build web --release --base-href /
      
      - name: üîë Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'placeholder-will-be-updated'
      
      - name: üîê Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
      - name: üì§ Deploy with rsync
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo rm -rf ${{ secrets.DEPLOY_PATH }}/* && sudo chown -R ${{ secrets.SSH_USER }}:www-data ${{ secrets.DEPLOY_PATH }} && sudo chmod -R 775 ${{ secrets.DEPLOY_PATH }}"
          rsync -avz -e "ssh -p ${{ secrets.SSH_PORT }}" \
          --delete \
          --exclude='.git*' \
          ./build/web/ \
          ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEPLOY_PATH }}/


      
      - name: üîß Set permissions for Nginx
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo chown -R www-data:www-data ${{ secrets.DEPLOY_PATH }} && sudo chmod -R 755 ${{ secrets.DEPLOY_PATH }} && sudo find ${{ secrets.DEPLOY_PATH }} -type f -exec chmod 644 {} \;"
      
      - name: ‚úÖ Deployment successful
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "üåê Site: https://jsontodart.progger.pro"
          echo "üìä Deployed files:"
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ls -lh ${{ secrets.DEPLOY_PATH }}"
